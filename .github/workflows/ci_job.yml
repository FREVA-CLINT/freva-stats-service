name: CI Tests

permissions:
  pull-requests: write

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
        max-parallel: 10
        matrix:
          python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up services
        run: |
          docker-compose -f dev-env/docker-compose.yaml up -d --remove-orphans
      - name: Install dependencies
        run: |
          python3 -m pip install -e .[test]
      - name: Check code style
        run: isort --check --profile black -t py311 -l 79 src
      - name: Check type annotations
        run: mypy --install-types --non-interactive
      - name: Test code style
        run: |
          flake8 src/freva_stats_service --count --max-complexity=8 --ignore=F405,W503 --max-line-length=88 --statistics --show-source
      - name: Run Tests
        run: |
          poetry run python3 -m pytest
          poetry run python3 -m coverage report
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
          flags: unittests


  dependabot:
    name: Merge PR by dependabot
    runs-on: ubuntu-latest
    needs: [ci]
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Approve dependabot's PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.TOKEN}}
      - name: Auto-merge for dependabot's PR
        run: gh pr merge --merge --auto "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.TOKEN}}
